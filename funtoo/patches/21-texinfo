#!/bin/bash

CATEGORY=sys-apps
PN=texinfo
PATCH=texinfo-brotli.patch

mkdir -p ${CATEGORY}/${PN}/files || exit 1
for i in ${CATEGORY}/${PN}/${PN}-6.{1,3}*.ebuild; do
	mv ${i} ${i%.ebuild}-r1.ebuild || exit 1
done
for i in ${CATEGORY}/${PN}/${PN}-6.{1,3,4,5.}*ebuild; do
	cat > ${PATCH} << EOF
--- a/${i}
+++ b/${i}
@@ -30,6 +30,12 @@
 	app-arch/xz-utils
 	nls? ( >=sys-devel/gettext-0.19.6 )"
 
+src_prepare() {
+	epatch "\${FILESDIR}/\${PN}-brotli.patch"
+	touch man/install-info.1 || die
+$([[ ${i} == *-6.5*.ebuild ]] && echo "	default")
+}
+
 src_configure() {
 	use static && append-ldflags -static
 	$([[ ${i} == *-6.5*.ebuild ]] && echo "local myeconfargs=(" || echo "econf \\")
EOF
	git apply ${PATCH} || exit 1
	rm ${PATCH}
done
cat > ${CATEGORY}/${PN}/files/${PATCH} << EOF
--- a/info/filesys.c
+++ b/info/filesys.c
@@ -60,9 +60,11 @@
 #if STRIP_DOT_EXE
   { ".gz", "gunzip" },
   { ".lz", "lunzip" },
+  { ".br", "brunzip" },
 #else
   { ".gz", "gzip -d" },
   { ".lz", "lzip -d" },
+  { ".br", "brzip -d" },
 #endif
   { ".xz", "unxz" },
   { ".bz2", "bunzip2" },
--- a/install-info/install-info.c
+++ b/install-info/install-info.c
@@ -438,6 +438,11 @@
       len -= 3;
       ret[len] = 0;
     }
+  else if (len > 3 && FILENAME_CMP (ret + len - 3, ".br") == 0)
+    {
+      len -= 3;
+      ret[len] = 0;
+    }
   else if (len > 5 && FILENAME_CMP (ret + len - 5, ".lzma") == 0)
    {
       len -= 5;
@@ -726,6 +731,12 @@
     }
   if (!f)
     {
+      free (*opened_filename);
+      *opened_filename = concat (filename, ".br", "");
+      f = fopen (*opened_filename, FOPEN_RBIN);
+    }
+  if (!f)
+    {
      free (*opened_filename);
      *opened_filename = concat (filename, ".lzma", "");
      f = fopen (*opened_filename, FOPEN_RBIN);
@@ -838,6 +849,14 @@
     *compression_program = "lzip";
 #endif
 
+  else if (data[0] == '\xce' && data[1] == '\xb2'
+           && data[2] == '\xcf' && data[3] == '\x81')
+#ifndef STRIP_DOT_EXE
+    *compression_program = "brzip.exe";
+#else
+    *compression_program = "brzip";
+#endif
+
     /* We (try to) match against old lzma format (which lacks proper
        header, two first matches), as well as the new format (last match).  */
   else if ((data[9] == 0x00 && data[10] == 0x00 && data[11] == 0x00
EOF
